<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MuxLogger_BuildFinishedSuccess" xml:space="preserve">
    <value>Build succeeded.</value>
  </data>
  <data name="ToolTask.ToolCommandFailed" xml:space="preserve">
    <value>MSB6006: "{0}" exited with code {1}.</value>
  </data>
  <data name="ToolTask.CommandTooLong" xml:space="preserve">
    <value>MSB6002: The command-line for the "{0}" task is too long. Command-lines longer than 32000 characters are likely to fail. Try reducing the length of the command-line by breaking down the call to "{0}" into multiple calls with fewer parameters per call.</value>
  </data>
  <data name="Tracking_UpToDate" xml:space="preserve">
    <value>Skipping task because it is up-to-date.</value>
  </data>
  <data name="Tracking_OutputsNotShown" xml:space="preserve">
    <value>Output details ({0} of them) were not logged for performance reasons.</value>
  </data>
  <data name="Tracking_SourceWillBeCompiledMissingDependency" xml:space="preserve">
    <value>{0} will be compiled because dependency {1} was missing.</value>
  </data>
  <data name="Tracking_SourceWillBeCompiledDependencyWasModifiedAt" xml:space="preserve">
    <value>{0} will be compiled because {1} was modified at {2}.</value>
  </data>
  <data name="Tracking_AllOutputsAreUpToDate" xml:space="preserve">
    <value>All outputs are up-to-date.</value>
  </data>
  <data name="ToolsLocationHelper.CouldNotCreateChain" xml:space="preserve">
    <value>The Framework at path "{0}" tried to include the framework at path "{1}" as part of its reference assembly paths but there was an error. {2}</value>
  </data>
  <data name="Tracking_SingleLogFileNotAvailable" xml:space="preserve">
    <value>Tracking log {0} is not available.</value>
  </data>
  <data name="General.InvalidToolSwitch" xml:space="preserve">
    <value>MSB6001: Invalid command line switch for "{0}". {1}</value>
  </data>
  <data name="Tracking_ReadLogEntryNotFound" xml:space="preserve">
    <value>Could not find {0} in the read tracking log.</value>
  </data>
  <data name="Tracking_WriteLogEntryNotFound" xml:space="preserve">
    <value>Could not find {0} in the write tracking log.</value>
  </data>
  <data name="Tracking_InputsFor" xml:space="preserve">
    <value>Inputs for {0}:</value>
  </data>
  <data name="Tracking_TrackingLogNotAvailable" xml:space="preserve">
    <value>Write Tracking log not available, minimal rebuild will be disabled.</value>
  </data>
  <data name="Tracking_OutputsFor" xml:space="preserve">
    <value>Outputs for {0}:</value>
  </data>
  <data name="Tracking_WriteTrackingCached" xml:space="preserve">
    <value>Using cached output dependency table built from:</value>
  </data>
  <data name="Tracking_SourcesAndCorrespondingOutputMismatch" xml:space="preserve">
    <value>The number of source files and corresponding outputs must match.</value>
  </data>
  <data name="Tracking_LogFilesNotAvailable" xml:space="preserve">
    <value>Tracking logs are not available, minimal rebuild will be disabled.</value>
  </data>
  <data name="Tracking_MissingOutputs" xml:space="preserve">
    <value>Missing output files detected, minimal rebuild will be disabled.</value>
  </data>
  <data name="Tracking_DependenciesForRootNotFound" xml:space="preserve">
    <value>No dependencies for output {0} were found in the tracking log; source compilation required.</value>
  </data>
  <data name="LoggingBeforeTaskInitialization" xml:space="preserve">
    <value>MSB6005: Task attempted to log before it was initialized. Message was: {0}</value>
  </data>
  <data name="Tracking_SourceWillBeCompiledAsNoTrackingLog" xml:space="preserve">
    <value>{0} will be compiled because the tracking log is not available.</value>
  </data>
  <data name="Tracking_RebuildingDueToInvalidTLog" xml:space="preserve">
    <value>MSB6008: Forcing a rebuild of all sources due to an error with the tracking logs. {0}</value>
  </data>
  <data name="ToolTask.ToolExecutableNotFound" xml:space="preserve">
    <value>MSB6004: The specified task executable location "{0}" is invalid.</value>
  </data>
  <data name="Tracking_SourceOutputsNotAvailable" xml:space="preserve">
    <value>{0} will be compiled because not all outputs are available.</value>
  </data>
  <data name="Tracking_ReadTrackingLogs" xml:space="preserve">
    <value>Read Tracking Logs:</value>
  </data>
  <data name="Tracking_SourceNotInTrackingLog" xml:space="preserve">
    <value>{0} will be compiled because it was not found in the tracking log.</value>
  </data>
  <data name="PlatformManifest.MissingPlatformXml" xml:space="preserve">
    <value>MSB6010: Could not find platform manifest file at "{0}".</value>
  </data>
  <data name="Tracking_InputNewerThanOutput" xml:space="preserve">
    <value>Source compilation required: input {0} is newer than output {1}.</value>
  </data>
  <data name="Tracking_InputsNotShown" xml:space="preserve">
    <value>Input details ({0} of them) were not logged for performance reasons.</value>
  </data>
  <data name="ToolsLocationHelper.CouldNotGenerateReferenceAssemblyDirectory" xml:space="preserve">
    <value>When attempting to generate a reference assembly path from the path "{0}" and the framework moniker "{1}" there was an error. {2}</value>
  </data>
  <data name="Tracking_OutputForRootNotFound" xml:space="preserve">
    <value>No output for {0} was found in the tracking log; source compilation required.</value>
  </data>
  <data name="General.ToolCommandFailedNoErrorCode" xml:space="preserve">
    <value>The command exited with code {0}.</value>
  </data>
  <data name="ToolLocationHelper.UnsupportedFrameworkVersion" xml:space="preserve">
    <value>.NET Framework version "{0}" is not supported. Please specify a value from the enumeration Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.</value>
  </data>
  <data name="ToolLocationHelper.UnsupportedVisualStudioVersion" xml:space="preserve">
    <value>Visual Studio version "{0}" is not supported.  Please specify a value from the enumeration Microsoft.Build.Utilities.VisualStudioVersion.</value>
  </data>
  <data name="ToolTask.CouldNotStartToolExecutable" xml:space="preserve">
    <value>MSB6003: The specified task executable "{0}" could not be run. {1}</value>
  </data>
  <data name="Tracking_SourceWillBeCompiledOutputDoesNotExist" xml:space="preserve">
    <value>{0} will be compiled because output {1} does not exist.</value>
  </data>
  <data name="ToolTask.EnvironmentVariableHeader" xml:space="preserve">
    <value>Environment Variables passed to tool:</value>
  </data>
  <data name="MuxLogger_BuildFinishedFailure" xml:space="preserve">
    <value>Build FAILED.</value>
  </data>
  <data name="ToolLocationHelper.UnsupportedFrameworkVersionForWindowsSdk" xml:space="preserve">
    <value>.NET Framework version "{0}" is not supported when explicitly targeting the Windows SDK, which is only supported on .NET 4.5 and later.  Please specify a value from the enumeration Microsoft.Build.Utilities.TargetDotNetFrameworkVersion that is Version45 or above.</value>
  </data>
  <data name="Tracking_OutputDoesNotExist" xml:space="preserve">
    <value>{0} does not exist; source compilation required.</value>
  </data>
  <data name="ToolsLocationHelper.InvalidRedistFile" xml:space="preserve">
    <value>There was an error reading the redist list file "{0}". {1}</value>
  </data>
  <data name="ToolTask.InvalidEnvironmentParameter" xml:space="preserve">
    <value>MSB6007: The "{0}" value passed to the Environment property is not in the format "name=value", where the value part may be empty.</value>
  </data>
  <data name="Tracking_SourceWillBeCompiled" xml:space="preserve">
    <value>{0} will be compiled.</value>
  </data>
  <data name="General.QuotesNotAllowedInThisKindOfTaskParameterNoSwitchName" xml:space="preserve">
    <value>Illegal quote in the command line value [{0}].</value>
  </data>
  <data name="Tracking_RebuildingDueToInvalidTLogContents" xml:space="preserve">
    <value>MSB6009: Forcing a rebuild of all source files due to the contents of "{0}" being invalid.</value>
  </data>
  <data name="Tracking_MissingInputs" xml:space="preserve">
    <value>Missing input files detected, minimal rebuild will be disabled.</value>
  </data>
  <data name="Tracking_DependencyWasModifiedAt" xml:space="preserve">
    <value>File {0} was modified at {1} which is newer than {2} modified at {3}.</value>
  </data>
  <data name="ToolTask.ValidateParametersFailed" xml:space="preserve">
    <value>MSB6011: Invalid parameters passed to the {0} task.</value>
  </data>
  <data name="Tracking_ReadTrackingCached" xml:space="preserve">
    <value>Using cached input dependency table built from:</value>
  </data>
  <data name="General.QuotesNotAllowedInThisKindOfTaskParameter" xml:space="preserve">
    <value>Illegal quote passed to the command line switch named "{0}". The value was [{1}].</value>
  </data>
  <data name="Tracking_TrackingCached" xml:space="preserve">
    <value>Using cached dependency table built from:</value>
  </data>
  <data name="Tracking_WriteTrackingLogs" xml:space="preserve">
    <value>Write Tracking Logs:</value>
  </data>
  <data name="Tracking_TrackingLogs" xml:space="preserve">
    <value>Tracking Logs:</value>
  </data>
</root>